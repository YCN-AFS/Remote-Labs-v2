---
services:
  postgres:
    image: postgres:15
    container_name: remote-lab-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: remote_labs
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      TZ: Asia/Ho_Chi_Minh
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  remote-lab:
    image: node:18
    container_name: remote-lab
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=remote_labs
    working_dir: /app
    command: sh -c '
      ln -sf /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime;
      apt update;
      apt install xz-utils curl gss-ntlmssp autossh postgresql-client -y;
      if [ ! -f powershell.deb ]; then
        curl -L https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/powershell_7.4.6-1.deb_amd64.deb -o powershell.deb;
      fi;
      if [ ! $(which powershell) ]; then
        dpkg -i powershell.deb; apt-get install -f -y;
        pwsh -c "Install-Module -Name PSWSMan -Force";
        pwsh -c "Install-WSMan";
      fi;
      npm i;
      npm run migrate;
      node index.js'
    ports:
      - "8000:8000"

volumes:
  postgres_data:
